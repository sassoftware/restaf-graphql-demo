   
/*
cas mycas;  
proc cas;  
 _args_ = {from=1, count=20 caslib="public" name="cars"  format=true};  
*/
  
results = getData(_args_.caslib, _args_.name , _args_.from, _args_.count,  _args_.format);   
send_response({casResults = results}); 
/* print results;  */
  
   
function getData(caslib, name, from, count, format) ;   
     
    action table.tableinfo r= result/   
        caslib = caslib   
        name   = name;   
    rowCount = result.TableInfo[1, 'rows'];   
    to = min(from + count -1, rowCount);   
   
   
    action table.columnInfo r= result/   
    table= {caslib = caslib, name = name};   
    i = 2;   
    columns[1] = {name = 'Row', type='number'};  
    do c over result.columnInfo;  
       print c.type;    
       type = 'number'; 
       if ( c.type eq 'varchar' ) then  
           type = 'string'; 
    
       else if ( c.type eq 'boolean') then  
           type='boolean'; 
       
        columns[i] = { name= c.column, type=type};    
        i = i + 1;   
        end;   
    print columns;   
   
    action table.fetch r = result /   
        table = {caslib=caslib, name=name}  
        from= from to=to format=format  
        ;   
    dataRows = resultsToDict(result.Fetch);   
    pagePrev = max(from - count, 1);   
    if ( to eq rowCount ) then do;   
        pageNext = -1;   
    end;   
    else do ;   
        pageNext = min(to + 1, rowCount);   
    end;   
return {rows = dataRows, columns = columns, pagination = {prev=pagePrev, next=pageNext, count=count}};   
end;   
   
function resultsToDict(resultTable);   
    casResults = {};   
    i = 1;   
    do row over resultTable;   
       irow = {};   
       j = 1;   
       do k,v over row;   
          irow[j] = v;   
          j = j + 1;   
        end;   
        casResults[i] =  irow;   
        i = i + 1;   
    end;   
    return casResults;   
end;   