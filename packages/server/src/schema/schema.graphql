/*
 * Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
*/

const { gql } = require('apollo-server-hapi');

const typeDefs = gql`
   
    scalar JSON   

    type Report {  
        """
        Name of report
        """
        name: String
        """
        Name of person/system to modify the report
        """
        modifiedBy: String
        """
        Date on which the report was modified
        """
        modifiedOn: String
    }
 
    type ReportView {
        """
        The url to display the interactive report
        """
        url: String
        """
        SVG form of the report
        """
        image: String
    }


  # The "Query" type is the root of all GraphQL queries.
  
    type SASResults {
        """
        ODS output from the server
        """
        ods: String
        """
        Log output from the server
        """
        log: String

        """
        List of Tables
        """
        tables: [String]
    
    }

    type Budget {
        whitechocolate: Float
        darkchocolate: Float
    }


    type WineProduction {
        """
        An array containing wine production
        """
        wines: [WineList]

        """
        ODS output 
        """
        report: SASResults
    }

    type WineList {
        year      : Int
        cabernet  : Int
        merlot    : Int
        pinot     : Int
        chardonnay: Int
        twobit    : Int 
    }

    type WineProductionCas {
        wines : [WineList]
    }



    type Query {
        test   : String

        """
        Returns a list of reports
        """
        reports: [Report]

        """
        Information on a specific report
        """
        report(name: String): ReportView

        """
        Score a loan using scoring on CAS. 
         Amount is the loan amount.
         Asset is the estimated total asset of the applicant
        """
        scoreLoan(amount: Int assets: Int): Float

        """
        Print a selected table
        """
        sasPrint(table: String) : SASResults

        """
        Returns new budget
        """
        budget(budget: Int): Budget

        """
        Return wine production for specified years using Compute Service
        """

        wineProduction(from: Int, to: Int): WineProduction

        """
        Return wine production for specified years using CAS  
        """

        wineProductionCas(from: Int, to: Int): WineProductionCas

        browseCasTable(table: String from: Int, count: Int, format: Boolean): JSON
    }

`;
module.exports = typeDefs;
/*

    type CasTable {
        allData: JSON
        columns: JSON
        rows   : JSON
    }
    */